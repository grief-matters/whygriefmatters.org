---
import startCase from "lodash/startCase";

import type { InternetResourcePageListing } from "@model/internetResource";

import Tag from "@ui/primitives/Tag.astro";
import TitleLink from "../primitives/TitleLink.astro";
import Subtitle from "../primitives/Subtitle.astro";
import FancyLabel from "@ui/primitives/FancyLabel.astro";
import TextBlock from "@ui/typography/TextBlock.astro";
import SourceLink from "@ui/SourceLink.astro";

interface Props {
  resource: InternetResourcePageListing;
}

const props = Astro.props;

const date = new Date(props.resource.lastUpdated).toLocaleDateString("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
});

const showTags = props.resource.hasSpanishVersion || props.resource.rating;
---

<article>
  <FancyLabel
    label={startCase(props.resource.type)}
    resourceType={props.resource.type}
  />
  <TitleLink
    label={props.resource.title}
    href={props.resource.resourceUrl}
    rel="noopener"
    target="_blank"
  />
  <div class="flex flex-wrap space-x-1 sm:space-x-2 mb-2">
    {
      props.resource.type !== "website" && (
        <>
          <Subtitle class="mt-1">
            {`From `}
            <SourceLink
              source={
                props.resource.sourceWebsite ?? props.resource.resourceUrl
              }
            />
            <span>{", "}</span>
          </Subtitle>
        </>
      )
    }
    <Subtitle class="mt-1" as="div">
      <span>
        {`Reviewed: `}
        <time datetime={props.resource.lastUpdated}>{date}</time>
      </span>
    </Subtitle>
  </div>
  {
    props.resource.description && (
      <div class="max-w-3xl">
        <TextBlock>{props.resource.description}</TextBlock>
      </div>
    )
  }
  {
    showTags && (
      <div class="my-3">
        {props.resource.hasSpanishVersion && (
          <Tag>{`Available in Spanish`}</Tag>
        )}
      </div>
    )
  }
</article>
