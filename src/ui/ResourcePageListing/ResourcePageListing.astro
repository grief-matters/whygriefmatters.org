---
import startCase from "lodash/startCase";

import type { InternetResourcePageListing } from "@model/internetResource";

import Tag from "@ui/primitives/Tag.astro";
import TitleLink from "../primitives/TitleLink.astro";
import Subtitle from "../primitives/Subtitle.astro";
import Text from "@ui/primitives/Text.astro";
import FancyLabel from "@ui/primitives/FancyLabel.astro";

interface Props {
  resource: InternetResourcePageListing;
}

const props = Astro.props;

const date = new Date(props.resource.lastUpdated).toLocaleDateString("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
});

const showTags = props.resource.hasSpanishVersion || props.resource.rating;

const sourceUrlRegEx = /^(https?:\/\/(?:www\.)?[^\/]+)/i;
const sourceNameRegEx = /^(?:https?:\/\/)?(?:www\.)?([^\/]+)/i;

const source = props.resource.sourceWebsite ?? {
  resourceUrl: props.resource.resourceUrl.match(sourceUrlRegEx)?.[1] ?? null,
  name: props.resource.resourceUrl.match(sourceNameRegEx)?.[1] ?? null,
};

const urlsToExclude = ["https://apps.apple.com", "https://podcasts.apple.com"];

// Ideally any resource that needed a source would have one but that will never be the case
const showSource =
  props.resource.type !== "website" &&
  source.resourceUrl !== null &&
  !urlsToExclude.includes(source.resourceUrl);
---

<article>
  <FancyLabel
    label={startCase(props.resource.type)}
    resourceType={props.resource.type}
  />
  <TitleLink
    label={props.resource.title}
    href={props.resource.resourceUrl}
    rel="noopener"
    target="_blank"
  />
  {
    showSource && (
      <Subtitle class="mt-1">
        {`From `}
        <a
          href={source.resourceUrl}
          rel="noopener"
          target="_blank"
          class:list={[
            "underline underline-offset-2",
            "decoration-slate-800/30 hover:decoration-sky-900 transition-decoration duration-300",
          ]}
        >
          {source.name}
        </a>
      </Subtitle>
    )
  }
  {
    props.resource.description && (
      <div class="max-w-3xl">
        <Text>{props.resource.description}</Text>
      </div>
    )
  }

  <Subtitle class="mt-1" as="div">
    <span>
      {`Last reviewed: `}
      <time datetime={props.resource.lastUpdated}>{date}</time>
    </span>
  </Subtitle>

  {
    showTags && (
      <div class="my-3">
        {props.resource.hasSpanishVersion && (
          <Tag>{`Available in Spanish`}</Tag>
        )}
      </div>
    )
  }
</article>
