---
import type { Content } from "@model/contentBlock";

import { getRouteFromDynamicResourcePageLink } from "@common/route";
import { getImageUrlBuilder } from "@common/client";

import PortableTextContentBlock from "@ui/typography/PortableTextContentBlock.astro";

import MainNavTopicCollectionContentBlock from "./MainNavTopicCollectionContentBlock.astro";
import MainNavTopicContentBlock from "./MainNavTopicContentBlock.astro";
import MainNavLink from "./MainNavLink.astro";

interface Props {
  block: Content;
}

const { block } = Astro.props;
---

<div>
  {
    () => {
      switch (block.contentType) {
        case "accessibleImage":
          return (
            <img
              src={getImageUrlBuilder(block.image).width(450).height(270).url()}
              alt={block.altText}
            />
          );
        case "resourceLinks":
          return <div>resourceLinks</div>;
        case "resourcePageLinks":
          return (
            <ul>
              {block.links.map((link) => (
                <li class="mb-2">
                  <MainNavLink
                    label={link.label}
                    href={
                      link.linkType === "resourcePageLink"
                        ? getRouteFromDynamicResourcePageLink({
                            type: link.type,
                            category: link.category,
                            population: link.population,
                          })
                        : link.url
                    }
                    variant="secondary"
                  />
                </li>
              ))}
            </ul>
          );

        case "richTextContentBlock":
          return (
            <div class="mb-3">
              <PortableTextContentBlock portableText={block.portableText} />
            </div>
          );
        case "imageRow":
          return <div>imageRow</div>;
        case "rowOfThreeFeaturedResources":
          return <div>rowOfThreeFeaturedResources</div>;
        case "topicContentBlock":
          return <MainNavTopicContentBlock topicContentBlock={block} />;
        case "topicCollectionContentBlockNew":
          return (
            <MainNavTopicCollectionContentBlock
              topicContentBlocks={block.topics}
            />
          );
      }
    }
  }
</div>
