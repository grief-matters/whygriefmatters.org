---
import uniqBy from "lodash/uniqBy";
import sortBy from "lodash/sortBy";

import type {
  InternetResourcePageListing,
  InternetResourceType,
} from "@model/internetResource";
import type { Category } from "@model/category";

import { getPopulationPagesData } from "@common/client";

import MainLayout from "@layouts/MainLayout.astro";
import ResourcePageLayout from "@layouts/ResourcePageLayout.astro";

import ResourcePageListing from "@ui/ResourcePageListing/ResourcePageListing.astro";
import ResourcePageListingsContainer from "@ui/ResourcePageListing/ResourcePageListingsContainer.astro";
import ResourcePageListingsListItem from "@ui/ResourcePageListing/ResourcePageListingsListItem.astro";
import { getFilteredTypesFromResources } from "@common/resourceType";
import PageHeader from "@ui/PageHeader.astro";
import { getResourcePageTitle } from "@common/page";

interface Props {
  populationName: string;
  resources: Array<InternetResourcePageListing>;
  applicableTypes: Array<InternetResourceType>;
  applicableCategories: Array<Category>;
}

export async function getStaticPaths() {
  const populationPagesData = await getPopulationPagesData();

  return populationPagesData.flatMap((pageData) => {
    const applicableCategories =
      uniqBy(
        pageData.resources?.flatMap((r) => r.categories),
        "slug"
      ).filter((x) => x !== null) ?? [];

    const applicableTypes = getFilteredTypesFromResources(
      pageData.resources ?? []
    );

    return {
      params: { population: pageData.slug },
      props: {
        populationName: pageData.name,
        resources:
          sortBy(pageData.resources, [
            "lastUpdated",
            "type",
            "title",
          ]).reverse() ?? [],
        applicableCategories,
        applicableTypes,
      },
    };
  });
}

const props = Astro.props;

const pageTitle = getResourcePageTitle({
  populationName: props.populationName,
});
---

<MainLayout>
  <ResourcePageLayout>
    <PageHeader slot="header" pageTitle={pageTitle} />
    <div slot="section" class="p-3">
      <ResourcePageListingsContainer>
        {
          props.resources.map((resource) => (
            <ResourcePageListingsListItem>
              <ResourcePageListing resource={resource} />
            </ResourcePageListingsListItem>
          ))
        }
      </ResourcePageListingsContainer>
    </div>
  </ResourcePageLayout>
</MainLayout>
